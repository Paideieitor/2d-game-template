#ifndef INPUT_H
#define INPUT_H

#define MAX_KEYS 300
#define MAX_BUTTONS 10

#include "Module.h"

#include "SDL/include/SDL_scancode.h" // yep sdl is not completly isolated... dont care, straight up cant be bothered to find a solution to this

enum class Key
{
	ZERO = SDL_SCANCODE_0,
	ONE = SDL_SCANCODE_1,
	TWO = SDL_SCANCODE_2,
	THREE = SDL_SCANCODE_3,
	FOUR = SDL_SCANCODE_4,
	FIVE = SDL_SCANCODE_5,
	SIX = SDL_SCANCODE_6,
	SEVEN = SDL_SCANCODE_7,
	EIGHT = SDL_SCANCODE_8,
	NINE = SDL_SCANCODE_9,
	A = SDL_SCANCODE_A,
	AC_BACK = SDL_SCANCODE_AC_BACK,
	AC_BOOKMARKS = SDL_SCANCODE_AC_BOOKMARKS,
	AC_FORWARD = SDL_SCANCODE_AC_FORWARD,
	AC_HOME = SDL_SCANCODE_AC_HOME,
	AC_REFRESH = SDL_SCANCODE_AC_REFRESH,
	AC_SEARCH = SDL_SCANCODE_AC_SEARCH,
	AC_STOP = SDL_SCANCODE_AC_STOP,
	AGAIN = SDL_SCANCODE_AGAIN,
	ALTERASE = SDL_SCANCODE_ALTERASE,
	APOSTROPHE = SDL_SCANCODE_APOSTROPHE,
	APPLICATION = SDL_SCANCODE_APPLICATION,
	AUDIOMUTE = SDL_SCANCODE_AUDIOMUTE,
	AUDIONEXT = SDL_SCANCODE_AUDIONEXT,
	AUDIOPLAY = SDL_SCANCODE_AUDIOPLAY,
	AUDIOPREV = SDL_SCANCODE_AUDIOPREV,
	AUDIOSTOP = SDL_SCANCODE_AUDIOSTOP,
	B = SDL_SCANCODE_B,
	BACKSLASH = SDL_SCANCODE_BACKSLASH,
	BACKSPACE = SDL_SCANCODE_BACKSPACE,
	BRIGHTNESSDOWN = SDL_SCANCODE_BRIGHTNESSDOWN,
	BRIGHTNESSUP = SDL_SCANCODE_BRIGHTNESSUP,
	C = SDL_SCANCODE_C,
	CALCULATOR = SDL_SCANCODE_CALCULATOR,
	CANCEL = SDL_SCANCODE_CANCEL,
	CAPSLOCK = SDL_SCANCODE_CAPSLOCK,
	CLEAR = SDL_SCANCODE_CLEAR,
	CLEARAGAIN = SDL_SCANCODE_CLEARAGAIN,
	COMMA = SDL_SCANCODE_COMMA,
	COMPUTER = SDL_SCANCODE_COMPUTER,
	COPY = SDL_SCANCODE_COPY,
	CRSEL = SDL_SCANCODE_CRSEL,
	CURRENCYSUBUNIT = SDL_SCANCODE_CURRENCYSUBUNIT,
	CURRENCYUNIT = SDL_SCANCODE_CURRENCYUNIT,
	CUT = SDL_SCANCODE_CUT,
	D = SDL_SCANCODE_D,
	DECIMALSEPARATOR = SDL_SCANCODE_DECIMALSEPARATOR,
	DELETE = SDL_SCANCODE_DELETE,
	DISPLAYSWITCH = SDL_SCANCODE_DISPLAYSWITCH,
	DOWN = SDL_SCANCODE_DOWN,
	E = SDL_SCANCODE_E,
	EJECT = SDL_SCANCODE_EJECT,
	END = SDL_SCANCODE_END,
	EQUALS = SDL_SCANCODE_EQUALS,
	ESCAPE = SDL_SCANCODE_ESCAPE,
	EXECUTE = SDL_SCANCODE_EXECUTE,
	EXSEL = SDL_SCANCODE_EXSEL,
	F = SDL_SCANCODE_F,
	F1 = SDL_SCANCODE_F1,
	F10 = SDL_SCANCODE_F10,
	F11 = SDL_SCANCODE_F11,
	F12 = SDL_SCANCODE_F12,
	F13 = SDL_SCANCODE_F13,
	F14 = SDL_SCANCODE_F14,
	F15 = SDL_SCANCODE_F15,
	F16 = SDL_SCANCODE_F16,
	F17 = SDL_SCANCODE_F17,
	F18 = SDL_SCANCODE_F18,
	F19 = SDL_SCANCODE_F19,
	F2 = SDL_SCANCODE_F2,
	F20 = SDL_SCANCODE_F20,
	F21 = SDL_SCANCODE_F21,
	F22 = SDL_SCANCODE_F22,
	F23 = SDL_SCANCODE_F23,
	F24 = SDL_SCANCODE_F24,
	F3 = SDL_SCANCODE_F3,
	F4 = SDL_SCANCODE_F4,
	F5 = SDL_SCANCODE_F5, 
	F6 = SDL_SCANCODE_F6, 
	F7 = SDL_SCANCODE_F7,
	F8 = SDL_SCANCODE_F8,
	F9 = SDL_SCANCODE_F9,
	FIND = SDL_SCANCODE_FIND,
	G = SDL_SCANCODE_G,
	GRAVE = SDL_SCANCODE_GRAVE,
	H = SDL_SCANCODE_H,
	HELP = SDL_SCANCODE_HELP,
	HOME = SDL_SCANCODE_HOME,
	I = SDL_SCANCODE_I,
	INSERT = SDL_SCANCODE_INSERT,
	J = SDL_SCANCODE_J,
	K = SDL_SCANCODE_K,
	KBDILLUMDOWN = SDL_SCANCODE_KBDILLUMDOWN,
	KBDILLUMTOGGLE = SDL_SCANCODE_KBDILLUMTOGGLE,
	KBDILLUMUP = SDL_SCANCODE_KBDILLUMUP,
	KP_0 = SDL_SCANCODE_KP_0,
	KP_00 = SDL_SCANCODE_KP_00,
	KP_000 = SDL_SCANCODE_KP_000,
	KP_1 = SDL_SCANCODE_KP_1,
	KP_2 = SDL_SCANCODE_KP_2,
	KP_3 = SDL_SCANCODE_KP_3,
	KP_4 = SDL_SCANCODE_KP_4,
	KP_5 = SDL_SCANCODE_KP_5,
	KP_6 = SDL_SCANCODE_KP_6,
	KP_7 = SDL_SCANCODE_KP_7,
	KP_8 = SDL_SCANCODE_KP_8,
	KP_9  = SDL_SCANCODE_KP_9,
	KP_A  = SDL_SCANCODE_KP_A,
	KP_AMPERSAND = SDL_SCANCODE_KP_AMPERSAND,
	KP_AT = SDL_SCANCODE_KP_AT,
	KP_B = SDL_SCANCODE_KP_B,
	KP_BACKSPACE = SDL_SCANCODE_KP_BACKSPACE,
	KP_BINARY = SDL_SCANCODE_KP_BINARY,
	KP_C = SDL_SCANCODE_KP_C,
	KP_CLEAR = SDL_SCANCODE_KP_CLEAR,
	KP_CLEARENTRY = SDL_SCANCODE_KP_CLEARENTRY,
	KP_COLON = SDL_SCANCODE_KP_COLON,
	KP_COMMA = SDL_SCANCODE_KP_COMMA,
	KP_D = SDL_SCANCODE_KP_D,
	KP_DBLAMPERSAND = SDL_SCANCODE_KP_DBLAMPERSAND,
	KP_DECIMAL = SDL_SCANCODE_KP_DECIMAL,
	KDSDL_SCANCODE_KP_DIVIDE,
	KP_E = SDL_SCANCODE_KP_E,
	KP_ENTER = SDL_SCANCODE_KP_ENTER,
	KP_EQUALS = SDL_SCANCODE_KP_EQUALS,
	KP_EQUALSAS400 = SDL_SCANCODE_KP_EQUALSAS400,
	KP_EXCLAM = SDL_SCANCODE_KP_EXCLAM,
	KP_F = SDL_SCANCODE_KP_F,
	KP_GREATER = SDL_SCANCODE_KP_GREATER,
	KP_HASH = SDL_SCANCODE_KP_HASH,
	KP_HEXADECIMAL = SDL_SCANCODE_KP_HEXADECIMAL,
	KP_LEFTBRACE = SDL_SCANCODE_KP_LEFTBRACE,
	KP_LEFTPAREN = SDL_SCANCODE_KP_LEFTPAREN,
	KP_LESS = SDL_SCANCODE_KP_LESS,
	KP_MEMADD = SDL_SCANCODE_KP_MEMADD,
	KP_MEMCLEAR = SDL_SCANCODE_KP_MEMCLEAR,
	KP_MEMDIVIDE = SDL_SCANCODE_KP_MEMDIVIDE,
	KP_MEMMULTIPLY = SDL_SCANCODE_KP_MEMMULTIPLY,
	KP_MEMRECALL = SDL_SCANCODE_KP_MEMRECALL,
	KP_MEMSTORE = SDL_SCANCODE_KP_MEMSTORE,
	KP_MEMSBTRACT = SDL_SCANCODE_KP_MEMSUBTRACT,
	KP_MINUS = SDL_SCANCODE_KP_MINUS,
	KP_MULTIPLY = SDL_SCANCODE_KP_MULTIPLY,
	KP_OCTAL = SDL_SCANCODE_KP_OCTAL,
	KP_PERCENT = SDL_SCANCODE_KP_PERCENT,
	KP_PERIOD = SDL_SCANCODE_KP_PERIOD,
	KP_PLUS = SDL_SCANCODE_KP_PLUS,
	KP_PLUSMINUS = SDL_SCANCODE_KP_PLUSMINUS,
	KP_POWER = SDL_SCANCODE_KP_POWER,
	KP_RIGHTBRACE = SDL_SCANCODE_KP_RIGHTBRACE,
	KP_RIGHTPAREN = SDL_SCANCODE_KP_RIGHTPAREN,
	KP_SPACE = SDL_SCANCODE_KP_SPACE,
	KP_TAB = SDL_SCANCODE_KP_TAB,
	KP_VERTICALBAR = SDL_SCANCODE_KP_VERTICALBAR,
	KP_XOR = SDL_SCANCODE_KP_XOR,
	L = SDL_SCANCODE_L,
	LALT = SDL_SCANCODE_LALT,
	LCTRL = SDL_SCANCODE_LCTRL,
	LEFT = SDL_SCANCODE_LEFT,
	LEFTBRACKET = SDL_SCANCODE_LEFTBRACKET,
	LGUI = SDL_SCANCODE_LGUI,
	LSHIFT = SDL_SCANCODE_LSHIFT,
	M = SDL_SCANCODE_M,
	MAIL = SDL_SCANCODE_MAIL,
	MEDIASELECT = SDL_SCANCODE_MEDIASELECT,
	MENU = SDL_SCANCODE_MENU,
	MINUS = SDL_SCANCODE_MINUS,
	MODE = SDL_SCANCODE_MODE,
	MUTE = SDL_SCANCODE_MUTE,
	N = SDL_SCANCODE_N,
	NUMLOCKCLEAR = SDL_SCANCODE_NUMLOCKCLEAR,
	O = SDL_SCANCODE_O,
	OPER = SDL_SCANCODE_OPER,
	OUT = SDL_SCANCODE_OUT,
	P = SDL_SCANCODE_P,
	PAGEDOWN = SDL_SCANCODE_PAGEDOWN,
	PAGEUP = SDL_SCANCODE_PAGEUP,
	PASTE = SDL_SCANCODE_PASTE,
	PAUSE = SDL_SCANCODE_PAUSE,
	PERIOD = SDL_SCANCODE_PERIOD,
	POWER = SDL_SCANCODE_POWER,
	PRINTSCREEN = SDL_SCANCODE_PRINTSCREEN,
	PRIOR = SDL_SCANCODE_PRIOR,
	Q = SDL_SCANCODE_Q,
	R = SDL_SCANCODE_R,
	RALT = SDL_SCANCODE_RALT,
	RCTRL = SDL_SCANCODE_RCTRL,
	RETURN = SDL_SCANCODE_RETURN,
	RETURN2 = SDL_SCANCODE_RETURN2,
	RGUI = SDL_SCANCODE_RGUI,
	RIGHT = SDL_SCANCODE_RIGHT,
	RIGHTBRACKET = SDL_SCANCODE_RIGHTBRACKET,
	RSHIFT = SDL_SCANCODE_RSHIFT,
	S = SDL_SCANCODE_S,
	SCROLLLOCK = SDL_SCANCODE_SCROLLLOCK,
	SELECT = SDL_SCANCODE_SELECT,
	SEMICOLON = SDL_SCANCODE_SEMICOLON,
	SEPARATOR = SDL_SCANCODE_SEPARATOR,
	SLASH = SDL_SCANCODE_SLASH,
	SLEEP = SDL_SCANCODE_SLEEP,
	SPACE = SDL_SCANCODE_SPACE,
	STOP = SDL_SCANCODE_STOP,
	SYSREQ = SDL_SCANCODE_SYSREQ,
	T = SDL_SCANCODE_T,
	TAB = SDL_SCANCODE_TAB,
	THOUSANDSSEPARATOR = SDL_SCANCODE_THOUSANDSSEPARATOR,
	U = SDL_SCANCODE_U,
	UNDO = SDL_SCANCODE_UNDO,
	UNKNOWN = SDL_SCANCODE_UNKNOWN,
	UP = SDL_SCANCODE_UP,
	V = SDL_SCANCODE_V,
	VOLUMEDOWN = SDL_SCANCODE_VOLUMEDOWN,
	VOLUMEUP = SDL_SCANCODE_VOLUMEUP,
	W = SDL_SCANCODE_W,
	WWW = SDL_SCANCODE_WWW,
	X = SDL_SCANCODE_X,
	Y = SDL_SCANCODE_Y,
	Z = SDL_SCANCODE_Z,
	MOUSE_LEFT = SLEEP + 1, // SDL_SLEEP is the last sdl scancode acording to https://www.freepascal-meets-sdl.net/sdl-2-0-scancode-lookup-table/
	MOUSE_RIGHT = MOUSE_LEFT + 1,
	MOUSE_1 = MOUSE_RIGHT + 1,
	MOUSE_2 = MOUSE_1 + 1,
	MOUSE_3 = MOUSE_2 + 1,
	MOUSE_4 = MOUSE_3 + 1,
	MOUSE_5 = MOUSE_4 + 1,
	MOUSE_6 = MOUSE_5 + 1,
	MOUSE_7 = MOUSE_6 + 1,
	MOUSE_8 = MOUSE_7 + 1,
	MOUSE_9 = MOUSE_8 + 1,
	MOUSE_10 = MOUSE_9 + 1,
	MOUSE_SCROLL = MOUSE_10 + 1
};

class Input : public Module
{
public:

	enum class State
	{
		IDLE,
		REPEAT,
		UP,
		DOWN
	};

	Input();
	~Input();

	bool SetUp(pugi::xml_node&);

	bool Start();
	bool Update(float dt);
	bool CleanUp();

	const State CheckState(Key key) const;

	fpoint GetMousePos(bool usescale = true) const;

	bool GetTextInput(char &input);

private:

	char textinput;
	bool inputrecieved;

	fpoint mouse;

	State keyboard[MAX_KEYS];
	State mousebuttons[MAX_BUTTONS];
	State mousescroll;
};

#endif
